name: CI/CD Pipeline

on:
  pull_request:

  push:
    branches:
      - main
      - development

jobs:
  build-and-test:
    name: Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Node
        uses: actions/setup-node@v3
        with:
          node-version: '20'
      
      - name: Install dependencies
        run: npm install

      - name: Execute tests
        run: npm test

      - name: Build app
        run: npm run build
  
  security-check:
    name: Snyk check
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Node
        uses: actions/setup-node@v3
        with:
          node-version: '20'
      
      - name: Install dependencies
        run: npm install

      - name: Install Snyk
        run: npm install -g snyk

      - name: Run Snyk Scan
        run: snyk test --severity-threshold=low --sarif-file-output=snyk.sarif
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      - name: Upload Snyk Report
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: snyk.sarif

  deploy-dev:
    name: Deploy - Development
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/development'
    needs: security-check 
    environment: dev
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Node
        uses: actions/setup-node@v3
        with:
          node-version: '20'
      
      - name: Install dependencies
        run: npm install

      - name: Build app
        run: npm run build
      
      - name: Deploy Vercel Development
        run: npx vercel --token=${{ secrets.VERCEL_TOKEN }} --yes
  
  deploy-prod:
    name: Deploy - Production
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: security-check
    environment: prod
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Node
        uses: actions/setup-node@v3
        with:
          node-version: '20'
      
      - name: Install dependencies
        run: npm install

      - name: Build app
        run: npm run build

      - name: Deploy Vercel Production
        run: npx vercel --prod --token=${{ secrets.VERCEL_TOKEN }} --yes